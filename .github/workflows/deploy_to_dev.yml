name: Deploy to DEV Environment - FIXED v2

on:
  pull_request:
    types: [closed]
    branches: [develop]
  issue_comment:
    types: [created]

jobs:
  deploy_to_dev:
    if: |
      (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop') ||
      (github.event.issue.pull_request && contains(github.event.comment.body, 'deploy'))
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Debug - Verify Clean Workflow v2  
        run: |
          echo "✅ FIXED WORKFLOW v2 - NO TRANSPORT CREATION"
          echo "📋 File: deploy_to_dev.yml (CLEAN VERSION)"
          echo "🚀 API: /DeployIntegrationDesigntimeArtifact ONLY"
          echo "❌ NO TMS/transport calls in this workflow"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Get PR information
        id: get_pr_info
        run: |
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            PR_URL=$(jq -r ".issue.pull_request.url" "$GITHUB_EVENT_PATH")
            PR_BRANCH=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $PR_URL | jq -r ".head.ref")
            PR_MERGED=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $PR_URL | jq -r ".merged")
            COMMENT_BODY="${{ github.event.comment.body }}"
            DEPLOY_TRIGGER="comment"
          else
            PR_BRANCH="${{ github.event.pull_request.head.ref }}"
            PR_MERGED="true"
            COMMENT_BODY=""
            DEPLOY_TRIGGER="merge"
          fi
          
          echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT
          echo "merged=$PR_MERGED" >> $GITHUB_OUTPUT
          echo "deploy_trigger=$DEPLOY_TRIGGER" >> $GITHUB_OUTPUT

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_pr_info.outputs.branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Parse iFlow Information
        id: parse_iflow
        run: |
          BRANCH="${{ steps.get_pr_info.outputs.branch }}"
          
          # Extract iFlow name from branch: feature/iflow-{name}-{env}
          IFLOW_NAME=$(echo "$BRANCH" | cut -d'-' -f3)
          
          echo "iflow_name=$IFLOW_NAME" >> $GITHUB_OUTPUT

      - name: Check deployment preference
        id: check_deploy
        run: |
          if [[ "${{ steps.get_pr_info.outputs.deploy_trigger }}" == "comment" ]]; then
            # For comment trigger, always deploy
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "deploy_reason=comment_trigger" >> $GITHUB_OUTPUT
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'deploy') }}" == "true" ]]; then
            # PR has "deploy" label - auto deploy
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "deploy_reason=auto_deploy_enabled" >> $GITHUB_OUTPUT
          else
            # Default to transport only
            echo "should_deploy=false" >> $GITHUB_OUTPUT
            echo "deploy_reason=transport_only" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to DEV (Auto)
        if: steps.check_deploy.outputs.should_deploy == 'true'
        run: |
          echo "🚀 Using deploy_to_dev.py script..."
          python deploy_to_dev.py --iflow "${{ steps.parse_iflow.outputs.iflow_name }}"
        env:
          OAUTH_URL: ${{ secrets.OAUTH_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}

      - name: Deployment Status Summary
        run: |
          echo "📋 Direct deployment to DEV (no transport request needed)"
          echo "🏷️  Deployment decision: ${{ steps.check_deploy.outputs.deploy_reason }}"
          
          if [[ "${{ steps.check_deploy.outputs.should_deploy }}" == "true" ]]; then
            echo "✅ Direct deployment completed to DEV environment"
            echo "🔗 iFlow: ${{ steps.parse_iflow.outputs.iflow_name }}"
          else
            echo "⏸️  No deployment performed (based on label/trigger)"
            echo "💡 To deploy: comment 'deploy' on the PR for immediate deployment"
          fi
