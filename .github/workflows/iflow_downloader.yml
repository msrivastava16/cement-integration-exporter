name: iFlow Mass Downloader

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        required: true
        type: choice
        options:
        - dev
        - stage
        default: 'dev'

jobs:
  download:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Debug environment
      run: |
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "GitHub environment: $GITHUB_ENVIRONMENT"

    - name: Debug environment variables
      run: |
        if [ -z "${{ secrets.OAUTH_URL }}" ]; then echo "OAUTH_URL is not set"; else echo "OAUTH_URL is set"; fi
        if [ -z "${{ secrets.CLIENT_ID }}" ]; then echo "CLIENT_ID is not set"; else echo "CLIENT_ID is set"; fi
        if [ -z "${{ secrets.CLIENT_SECRET }}" ]; then echo "CLIENT_SECRET is not set"; else echo "CLIENT_SECRET is set"; fi
        if [ -z "${{ secrets.BASE_URL }}" ]; then echo "BASE_URL is not set"; else echo "BASE_URL is set"; fi
        if [ -z "${{ secrets.PACKAGE_URL }}" ]; then echo "PACKAGE_URL is not set"; else echo "PACKAGE_URL is set"; fi
        if [ -z "${{ secrets.ARTIFACTS_URL }}" ]; then echo "ARTIFACTS_URL is not set"; else echo "ARTIFACTS_URL is set"; fi

    - name: Run iFlow downloader
      run: python downloadiFlows.py
      env:
        OAUTH_URL: ${{ secrets.OAUTH_URL }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        BASE_URL: ${{ secrets.BASE_URL }}
        PACKAGE_URL: ${{ secrets.PACKAGE_URL }}
        ARTIFACTS_URL: ${{ secrets.ARTIFACTS_URL }}