name: Deploy iFlow Config

on:
  issue_comment:
    types: [created]

jobs:
  deploy_iflow_config:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Get PR branch
        id: get_pr_branch
        run: |
          PR_URL=$(jq -r ".issue.pull_request.url" "$GITHUB_EVENT_PATH")
          PR_BRANCH=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $PR_URL | jq -r ".head.ref")
          echo "::set-output name=branch::$PR_BRANCH"

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_pr_branch.outputs.branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Deploy iFlow config
        run: |
          # Add your deployment logic here
          # For example, you could use the configuration file to update a system
          echo "Deploying iFlow configuration..."
          # The configuration file can be found in the config/iflows directory
          # The name of the file will be in the format <iflow_name>-<environment>.properties
          # You can parse the iflow_name and environment from the branch name
          # Example: feature/iflow-my-iflow-dev -> my-iflow, dev
          IFLOW_NAME=$(echo "${{ steps.get_pr_branch.outputs.branch }}" | cut -d'-' -f3)
          ENVIRONMENT=$(echo "${{ steps.get_pr_branch.outputs.branch }}" | cut -d'-' -f4)
          CONFIG_FILE="config/iflows/${IFLOW_NAME}-${ENVIRONMENT}.properties"
          echo "Config file: $CONFIG_FILE"
          # Add your deployment commands here
          # For example:
          # python deploy.py --config $CONFIG_FILE
        env:
          OAUTH_URL: ${{ secrets.OAUTH_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}
          PACKAGE_URL: ${{ secrets.PACKAGE_URL }}
          ARTIFACTS_URL: ${{ secrets.ARTIFACTS_URL }}
